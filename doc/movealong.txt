*movealong.txt*  Context-aware motion commands

Author:  Markus Koller <http://github.com/toupeira/>
Version: 1.0
License: Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.

CONTENTS                                        *movealong*

Introduction       |movealong-introduction|
Mappings           |movealong-mappings|
Configuration      |movealong-configuration|
Commands           |movealong-commands|

------------------------------------------------------------------------------
INTRODUCTION                                    *movealong-introduction*

This plugin gives you commands to repeat a motion until either a specific
word or syntax group is encountered, or an arbitrary expression returns true.
It also skips over blank lines, punctuation and other syntax noise.

The included default keymaps are disabled by default, you can enable them
by putting the following into your |.vimrc|: >

  let g:movealong_default_keys = 1
<

You can also override any of the default keys as follows: >

  let g:movealong_default_maps = {
    \ 'WordForward'  : '<Leader>w',
    \ 'WordBackward' : '<Leader>b',
  \ }
<

See |movealong-mappings| for a list of all the available mapping names.
Your custom keys will be merged with the default keys as defined in
`plugin/movealong.vim`.

------------------------------------------------------------------------------
MAPPINGS                                        *movealong-mappings*

Normal mode mappings:

<Plug>movealongWordForward                      *<Plug>movealongWordForward*
<Space>
        Move to the next useful word.

<Plug>movealongWordBackward                     *<Plug>movealongWordBackward*
<Backspace>
        Move to the previous useful word.

<Plug>movealongLineForward                      *<Plug>movealongLineForward*
<Tab>
        Move to the next useful line.

<Plug>movealongLineBackward                     *<Plug>movealongLineBackward*
<S-Tab>
        Move to the previous useful line.

<Plug>movealongIndentForward                    *<Plug>movealongIndentForward*
<Leader>i
        Move to the next line with the same indent.

<Plug>movealongIndentBackward                   *<Plug>movealongIndentBackward*
<Leader>I
        Move to the previous line with the same indent.

<Plug>movealongFunctionForward                  *<Plug>movealongFunctionForward*
<Leader>f
        Move to the next function declaration.

<Plug>movealongFunctionBackward                 *<Plug>movealongFunctionBackward*
<Leader>F
        Move to the previous function declaration.

        NOTE: Unfortunately there doesn't seem to be a common syntax group for
        function declarations, so at the moment a hard-coded list of
        filetype-specific groups is used. You can override this by setting
        `g:movealong_function_syntax` or `b:movealong_function_syntax` to a |List|
        of syntax group names.

------------------------------------------------------------------------------
CONFIGURATION                                   *movealong-configuration*

g:movealong_default_keys                        *g:movealong_default_keys*
        Enable default keymaps for normal mode (see |movealong-mappings|).

        The default value is `0`.

g:movealong_default_maps                        *g:movealong_default_maps*
        A |Dict| of keys to be mapped to the provided default actions.

        See |movealong-mappings| and `plugin/movealong.vim` for the default
        values.

The following variables can also be overriden with buffer-level variables
for filetype-specific configuration:

g:movealong_max_motions                         *g:movealong_max_motions*
        Set an upper limit for how many times the motion will be repeated,
        this is to avoid infinite loops and other bugs.

        The default value is `1000`.

g:movealong_skip_syntax                         *g:movealong_skip_syntax*
        A |List| of syntax groups that should be skipped by default.

        See `plugin/movealong.vim` for the default value.

g:movealong_skip_words                          *g:movealong_skip_words*
        A |List| of words that should be skipped by default.

        See `plugin/movealong.vim` for the default value.

------------------------------------------------------------------------------
COMMANDS                                        *movealong-commands*

:Movealong {motion} [options]                   *:Movealong*
        Repeat the |motion| until any of the given conditions are met.

        You can pass the following options:

        -syntax {syntax}
            Specify one ore more syntax groups to match, separated
            by commas.


        -expression {expr}
            Specify an |expression| that has to return true.

        -pattern {pattern}
            Specify a |pattern| to match.

        -inline
            Use this for |characterwise| motions, in this mode the
            inner |word| under the cursor will be used for matching
            instead of the whole line.

        -initial {bool}
            Perform initial motion before checking context.
            Default: 1

        -skip-noise {bool}
            Run MovealongNoise after a successful motion.
            Default: 1, or 0 if an expression or pattern was passed

        -skip-blank {bool}
            Skip over any whitespace.
            Default: 1

        -skip-punct {bool}
            Skip over any punctuation. (see |[:punct:]|)
            Default: 1

        -skip-syntax {bool}
            Skip over the specified syntax groups.
            Default: |g:movealong_skip_syntax|

        -skip-words {bool}
            Skip over the specified words.
            Default: |g:movealong_skip_words|

        -max-motions {number}
            Abort if the motion has been repeated [number] times.
            Default: |g:movealong_max_motions|

        -cross-lines {bool}
            Continue if a motion changes the current line.
            Default: 1

        -cross-eof {bool}
            Continue if a motion wraps around the file boundaries.
            Default: 0

:MovealongNoise                                 *MovealongNoise*
        Convenience wrapper to skip only over blank lines, punctuation
        and syntax noise.

:MovealongWhatsWrong                            *MovealongWhatsWrong*
        Show a message explaining why the last command stopped.

------------------------------------------------------------------------------
ABOUT                                           *movealong-about*

Grab the latest version or report a bug on GitHub:

http://github.com/toupeira/vim-movealong

 vim:tw=78:et:ft=help:norl:
